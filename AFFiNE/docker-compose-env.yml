version: "3.8"

networks:
  traefik-network:
    external: true
  affine-network:
    driver: bridge

services:
  postgres:
    image: postgres:15
    container_name: affine_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/db:/var/lib/postgresql/data
    networks:
      - affine-network

  redis:
    image: redis:7
    container_name: affine_redis
    restart: always
    volumes:
      - ./data/redis:/data
    networks:
      - affine-network

  minio:
    image: minio/minio:latest
    container_name: affine_minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - ./data/minio:/data
    networks:
      - affine-network
    ports:
      - "9001:9001" # MinIO 控制台

  affine:
    image: ghcr.io/toeverything/affine:stable
    container_name: affine_app
    restart: always
    depends_on:
      - postgres
      - redis
      - minio
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      APP_URL: https://${AFFINE_DOMAIN}
    volumes:
      - ./data/affine:/app/data
    networks:
      - affine-network
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.affine.rule=Host(`${AFFINE_DOMAIN}`)"
      - "traefik.http.routers.affine.entrypoints=websecure"
      - "traefik.http.routers.affine.tls.certresolver=myresolver"
      - "traefik.http.services.affine.loadbalancer.server.port=3010"
